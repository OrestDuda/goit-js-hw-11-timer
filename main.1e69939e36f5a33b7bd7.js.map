{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js","webpack:///./js/timer_class.js"],"names":["arrayRefs","document","querySelectorAll","setInterval","newDate","Date","currentDate","now","delta","getTime","days","Math","floor","hours","mins","secs","textContent","toString","padStart","constructor","selector","targetDate","this","insertDate","refs"],"mappings":"kHAAA,sC,mBCAA,MAAMA,EAAYC,SAASC,iBAAiB,UAE5CC,YAAY,KACV,MAAMC,EAAU,IAAIC,KAAK,gBACnBC,EAAcD,KAAKE,MACnBC,EAAQJ,EAAQK,UAAYH,EAE5BI,EAAOC,KAAKC,MAAMJ,EAAQ,OAC1BK,EAAQF,KAAKC,MAAOJ,EAAQ,MAAT,MACnBM,EAAOH,KAAKC,MAAOJ,EAAQ,KAAT,KAClBO,EAAOJ,KAAKC,MAAOJ,EAAQ,IAAe,KAEhDR,EAAU,GAAGgB,YAAcN,EAAKO,WAAWC,SAAS,EAAG,KACvDlB,EAAU,GAAGgB,YAAcH,EAAMI,WAAWC,SAAS,EAAG,KACxDlB,EAAU,GAAGgB,YAAcF,EAAKG,WAAWC,SAAS,EAAG,KACvDlB,EAAU,GAAGgB,YAAcD,EAAKE,WAAWC,SAAS,EAAG,MACtD,M,mBCQW,IAxBd,MACEC,aAAY,SAAEC,EAAF,WAAYC,IACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAAWZ,UAE/Bc,aACEpB,YAAY,KACV,IAAIG,EAAcD,KAAKE,MACnBC,EAAQc,KAAKD,WAAaf,EAC1BI,EAAOC,KAAKC,MAAMJ,EAAQ,OAC1BK,EAAQF,KAAKC,MACdJ,EAAQ,MAAT,MAEEM,EAAOH,KAAKC,MAAOJ,EAAQ,KAAT,KAClBO,EAAOJ,KAAKC,MAAOJ,EAAQ,IAAe,KAC1CgB,EAAOvB,SAASC,iBAAiBoB,KAAKF,UAC1CI,EAAK,GAAGR,YAAcN,EAAKO,WAAWC,SAAS,EAAG,KAClDM,EAAK,GAAGR,YAAcH,EAAMI,WAAWC,SAAS,EAAG,KACnDM,EAAK,GAAGR,YAAcF,EAAKG,WAAWC,SAAS,EAAG,KAClDM,EAAK,GAAGR,YAAcD,EAAKE,WAAWC,SAAS,EAAG,MACjD,OAI0B,CAC/BE,SAAU,eACVC,WAAY,IAAIhB,KAAK,kBAGjBkB,e","file":"main.1e69939e36f5a33b7bd7.js","sourcesContent":["import \"./styles.css\";\nimport \"./js/timer\";\nimport \"./js/timer_class\";\n","const arrayRefs = document.querySelectorAll(\".value\");\n\nsetInterval(() => {\n  const newDate = new Date(\"Feb 07, 2021\");\n  const currentDate = Date.now();\n  const delta = newDate.getTime() - currentDate;\n\n  const days = Math.floor(delta / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const mins = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n  const secs = Math.floor((delta % (1000 * 60)) / 1000);\n\n  arrayRefs[0].textContent = days.toString().padStart(2, \"0\");\n  arrayRefs[1].textContent = hours.toString().padStart(2, \"0\");\n  arrayRefs[2].textContent = mins.toString().padStart(2, \"0\");\n  arrayRefs[3].textContent = secs.toString().padStart(2, \"0\");\n}, 1000);\n","class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate.getTime();\n  }\n  insertDate() {\n    setInterval(() => {\n      let currentDate = Date.now();\n      let delta = this.targetDate - currentDate;\n      let days = Math.floor(delta / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(\n        (delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      let mins = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n      let secs = Math.floor((delta % (1000 * 60)) / 1000);\n      let refs = document.querySelectorAll(this.selector);\n      refs[0].textContent = days.toString().padStart(2, \"0\");\n      refs[1].textContent = hours.toString().padStart(2, \"0\");\n      refs[2].textContent = mins.toString().padStart(2, \"0\");\n      refs[3].textContent = secs.toString().padStart(2, \"0\");\n    }, 1000);\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: \".value-class\",\n  targetDate: new Date(\"Mar 17, 2021\"),\n});\n\ntimer.insertDate();\n"],"sourceRoot":""}